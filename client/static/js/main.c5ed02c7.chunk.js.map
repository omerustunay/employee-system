{"version":3,"sources":["components/LocationItem.js","components/Locations.js","components/About.js","components/LocationDetails.js","components/AddLocation.js","components/EditLocation.js","components/Main.js","components/Navbar.js","App.js","serviceWorker.js","index.js"],"names":["LocationItem","props","state","item","className","to","this","id","name","Component","Locations","locations","getLocations","axios","get","then","response","setState","data","console","log","catch","err","locationItems","map","location","i","key","About","LocationDetails","details","locationId","match","params","delete","history","push","addres","postal_code","city","country","onClick","onDelete","bind","AddLocation","newLocation","request","method","url","e","refs","value","addMeetup","preventDefault","onSubmit","type","ref","htmlFor","EditLocation","handleInputChange","getLocationDetails","editLocation","target","onChange","Main","exact","path","component","Navbar","href","data-activates","App","Boolean","window","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.c5ed02c7.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport {Link} from 'react-router-dom';\n\nclass LocationItem extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      item:props.item\n    }\n  }\n\n  render(){\n    return (\n      <li className=\"collection-item\">\n        <Link to={`/locations/${this.state.item.id}`}>{this.state.item.name}</Link>\n      </li>\n    )\n  }\n}\n\nexport default LocationItem;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport LocationItem from './LocationItem';\n\nclass Locations extends Component{\n    constructor(){\n        super();\n        this.state = {\n          locations: []\n        }\n    }\n\n    componentWillMount(){\n        this.getLocations();\n      }\n    \n    getLocations(){\n        axios.get('http://localhost:3000/api/locations')\n          .then(response => {\n            this.setState({locations: response.data}, () => {\n              console.log(this.state);\n            })\n        })\n        .catch(err => console.log(err));\n    }\n\n    render(){\n        const locationItems = this.state.locations.map((location, i) => {\n            return(\n                <LocationItem key={location.id} item={location} />\n            )\n          })\n    return(\n        <div>\n            <h1>Locations</h1>\n            <ul className=\"collection\">\n            {locationItems}\n            </ul>\n        </div>\n    )\n  }\n}\n\n\nexport default Locations;","import React from 'react';\n\n\nconst About = () => (\n  <div>\n    <h1>about</h1>\n   \n  </div>\n)\n\nexport default About;\n","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass LocationDetails extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      details:''\n    }\n  }\n\n  componentWillMount(){\n    this.getLocations();\n  }\n\n  getLocations(){\n    let locationId = this.props.match.params.id;\n    axios.get(`http://localhost:3000/api/locations/${locationId}`)\n    .then(response => {\n      this.setState({details: response.data}, () => {\n        console.log(this.state);\n      })\n  })\n  .catch(err => console.log(err));\n  }\n\n  onDelete(){\n    let locationId = this.state.details.id;\n    axios.delete(`http://localhost:3000/api/locations/${locationId}`)\n      .then(response => {\n        this.props.history.push('/');\n      }).catch(err => console.log(err));\n  }\n\n  render(){\n    return (\n     <div>\n       <br />\n       <Link className=\"btn grey\" to=\"/\">Back</Link>\n       <h1>{this.state.details.name}</h1>\n       <ul className=\"collection\">\n        <li className=\"collection-item\">Name: {this.state.details.name}</li>\n        <li className=\"collection-item\">Addres: {this.state.details.addres}</li>\n        <li className=\"collection-item\">Postal Code: {this.state.details.postal_code}</li>\n        <li className=\"collection-item\">City: {this.state.details.city}</li>\n        <li className=\"collection-item\">Country: {this.state.details.country}</li>\n        </ul>\n        <Link className=\"btn\" to={`/locations/edit/${this.state.details.id}`}> Edit</Link>\n\n        <button onClick={this.onDelete.bind(this)} className=\"btn red right\">Delete</button>\n      </div>\n    )\n  }\n}\n\nexport default LocationDetails;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass AddLocation extends Component{\n  addMeetup(newLocation){\n    axios.request({\n      method:'post',\n      url:'http://localhost:3000/api/locations',\n      data: newLocation\n    }).then(response => {\n      this.props.history.push('/');\n    }).catch(err => console.log(err));\n  }\n\n  onSubmit(e){\n    const newLocation = {\n      name: this.refs.name.value,\n      addres: this.refs.addres.value,\n      postal_code: this.refs.postal_code.value,\n      city: this.refs.city.value,\n      country: this.refs.country.value\n    }\n    this.addMeetup(newLocation);\n    e.preventDefault();\n  }\n\n  render(){\n    return (\n     <div>\n        <br />\n       <Link className=\"btn grey\" to=\"/\">Back</Link>\n       <h1>Add Location</h1>\n       <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"name\" ref=\"name\" />\n            <label htmlFor=\"name\">Name</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"addres\" ref=\"addres\" />\n            <label htmlFor=\"name\">Addres</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"postal_code\" ref=\"postal_code\" />\n            <label htmlFor=\"name\">Postal Code</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"city\" ref=\"city\" />\n            <label htmlFor=\"city\">City</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"country\" ref=\"country\" />\n            <label htmlFor=\"address\">Country</label>\n          </div>\n          <input type=\"submit\" value=\"Save\" className=\"btn\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default AddLocation;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport {Link} from 'react-router-dom';\n\nclass EditLocation extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      id:'',\n      name:'',\n      addres:'',\n      postal_code:'',\n      city:'',\n      country:''\n    }\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  componentWillMount(){\n    this.getLocationDetails();\n  }\n\n  getLocationDetails(){\n    let locationId = this.props.match.params.id;\n    axios.get(`http://localhost:3000/api/locations/${locationId}`)\n    .then(response => {\n      this.setState({\n        id: response.data.id,\n        name: response.data.name,\n        addres: response.data.addres,\n        postal_code: response.data.postal_code,\n        city: response.data.city,\n        country: response.data.country\n      }, () => {\n        console.log(this.state);\n      });\n    })\n    .catch(err => console.log(err));\n    }\n\n  editLocation(newLocation){\n    axios.request({\n      method:'put',\n      url:`http://localhost:3000/api/locations/${this.state.id}`,\n      data: newLocation\n    }).then(response => {\n      this.props.history.push('/');\n    }).catch(err => console.log(err));\n  }\n\n  onSubmit(e){\n    const newLocation = {\n      name: this.refs.name.value,\n      addres: this.refs.addres.value,\n      postal_code: this.refs.postal_code.value,\n      city: this.refs.city.value,\n      country: this.refs.country.value\n    }\n    this.editLocation(newLocation);\n    e.preventDefault();\n  }\n\n  handleInputChange(e){\n    const target = e.target;\n    const value = target.value;\n    const name = target.name;\n\n    this.setState({\n      [name]: value\n    });\n  }\n\n  render(){\n    return (\n     <div>\n        <br />\n       <Link className=\"btn grey\" to=\"/\">Back</Link>\n       <h1>Edit Location</h1>\n       <form onSubmit={this.onSubmit.bind(this)}>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"name\" ref=\"name\" value={this.state.name} onChange={this.handleInputChange} />\n            <label htmlFor=\"name\">Name</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"addres\" ref=\"addres\" value={this.state.addres} onChange={this.handleInputChange} />\n            <label htmlFor=\"addres\">Addres</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"postal_code\" ref=\"postal_code\" value={this.state.postal_code} onChange={this.handleInputChange} />\n            <label htmlFor=\"postal_code\">Postal Code</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"city\" ref=\"city\" value={this.state.city} onChange={this.handleInputChange} />\n            <label htmlFor=\"city\">City</label>\n          </div>\n          <div className=\"input-field\">\n            <input type=\"text\" name=\"country\" ref=\"country\" value={this.state.country} onChange={this.handleInputChange} />\n            <label htmlFor=\"country\">Country</label>\n          </div>\n          <input type=\"submit\" value=\"Save\" className=\"btn\" />\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default EditLocation;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Locations from './Locations';\nimport About from './About';\nimport LocationDetails from './LocationDetails';\nimport AddLocation from './AddLocation';\nimport EditLocation from './EditLocation';\n\n\nconst Main = () => (\n  <main>\n    <Switch>\n      <Route exact path='/' component={Locations} />\n      <Route exact path='/about' component={About} />\n      <Route exact path='/locations/add' component={AddLocation} />\n      <Route exact path='/locations/edit/:id' component={EditLocation} />\n      <Route exact path='/locations/:id' component={LocationDetails} />\n      \n    </Switch>\n  </main>\n)\n\nexport default Main;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Navbar extends Component{\n  render(){\n    return (\n      <div>\n        <nav className=\"blue darken-3\">\n          <div className=\"nav-wrapper\">\n            <a href=\"#/\" className=\"brand-logo center\">Atez</a>\n            <a data-activates=\"main-menu\" className=\"button-collapse show-on-large\">\n              <i className=\"fa fa-bars\"></i>\n              </a>\n            <ul className=\"right hide-on-small-only\">\n              <li><Link to=\"/\"><i className=\"fa fa-users\"></i> Atez</Link></li>         \n            </ul>\n            <ul className=\"side-nav\" id=\"main-menu\">\n            <li><Link to=\"#/\"><i className=\"fa fa-users\"></i> Atez</Link></li>  \n            <li><Link to=\"#/locations/add\"><i className=\"fa fa-plus\"></i> Add Location</Link></li>  \n            <li><Link to=\"#/about\"><i className=\"fa fa-question-circle\"></i> About</Link></li> \n            </ul>\n          </div>\n        </nav>\n      </div>\n    )\n  }\n}\n\nexport default Navbar;","import React from 'react';\nimport './App.css';\nimport Main from './components/Main';\nimport Navbar from './components/Navbar';\nimport { Link } from 'react-router-dom';\n\nconst App = () => (\n  <div>\n    <Navbar />\n    <div className=\"container\">\n      <Main />\n    </div>\n    <div className=\"fixed-action-btn\">\n      <Link to=\"/locations/add\" className=\"btn-floating btn-large red\">\n        <i className=\"fa fa-plus\"></i>\n      </Link>\n    </div>\n  </div>\n)\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <BrowserRouter>\n  <App />\n</BrowserRouter>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}